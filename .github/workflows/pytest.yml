name: Pytest

on: [push, pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Pytest:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Setup python version
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version  }}
      - name: Display python version
        run: python -c "import sys; print(sys.version)"

      - name: Build docker
        run: docker build --pull --rm -f "Dockerfile" -t pointcloudlibrary/clang-bind:latest "."

      # Test with pytest
      - name: Test with pytest
        run: docker run --rm -t pointcloudlibrary/clang-bind:latest -c "export PYTHONPATH=.; pytest --junitxml=${GITHUB_WORKSPACE}/result_${{ matrix.python-version }}.xml"

      # Artifacts
      - name: Upload pytest test results
        uses: actions/upload-artifact@v2
        with:
          # We are in ${GITHUB_WORKSPACE}
          # ${GITHUB_SHA} won't work: use ${{ github.sha }}
          name: pytest_py${{ matrix.python-version }}-${{ github.sha }}
          path: result_${{ matrix.python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
